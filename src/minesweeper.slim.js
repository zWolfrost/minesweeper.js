export default class a{constructor(c,d,a=Math.floor(c*d/5),p=Math.random){let l=a=>{let b=[a],e=a%this.width,f=Math.floor(a/this.width),c=f>0,d=f<this.height-1;return c&&b.push(a-this.width),d&&b.push(a+this.width),e>0&&(b.push(a-1),c&&b.push(a-this.width-1),d&&b.push(a+this.width-1)),e<this.width-1&&(b.push(a+1),c&&b.push(a-this.width+1),d&&b.push(a+this.width+1)),b};c=validateNumber(c,0),d=validateNumber(d,0);let b=c*d;if(Array.isArray(a)){Object.assign(this,{width:c,height:d,cells:b,mines:a.length});for(let i=0;i<b;i++)this[i]={mines:0,isMine:!1,isOpen:!1,isFlagged:!1};for(let f=0;f<a.length;f++){this[a[f]].isMine=!0;let m=l(a[f]);for(let j=0;j<m.length;j++)this[m[j]].mines++}}else{a=validateNumber(a,0,b),Object.assign(this,{width:c,height:d,cells:b,mines:a});for(let g=0;g<b;g++)this[g]={mines:0,isMine:g<a,isOpen:!1,isFlagged:!1};for(let e=b-1;e>0;e--){let n=Math.floor(p()*(e+1));[this[e],this[n]]=[this[n],this[e]]}for(let h=0;h<b;h++)if(this[h].isMine){let o=l(h);for(let k=0;k<o.length;k++)this[o[k]].mines++}}return this}toMinefield2D(){let c=new Minefield2D(this.width,this.height);for(let a=0;a<this.width;a++)for(let b=0;b<this.height;b++)delete c[a][b],c[a][b]=this[a+b*this.width];return c}simplify(){let b=[];for(let a=0;a<this.cells;a++)b.push(this[a].isMine?-1:this[a].mines);return b}};class Minefield2D extends a{constructor(a,d,g=Math.floor(a*d/5),h=Math.random){super(a,d,g,h);let e=[];for(let b=0;b<a;b++){e.push([]);for(let c=0;c<d;c++)e[b][c]=this[b+c*a]}for(let f=0;f<this.cells;f++)delete this[f];return Object.assign(this,e),this}toMinefield(){let d=new a(this.width,this.height);for(let b=0;b<this.width;b++)for(let c=0;c<this.height;c++)delete d[b+c*this.width],d[b+c*this.width]=this[b][c];return d}simplify(){let b=[];for(let a=0;a<this.width;a++){b.push([]);for(let c=0;c<this.height;c++){let d=this[a][c];b[a].push(d.isMine?-1:d.mines)}}return b}}function validateNumber(a,b=-1/0,c=1/0){try{if(a=Math.trunc(b>=0?Math.abs(+a):+a),isNaN(a))throw new Error}catch{throw new Error("Invalid parameter type")}if(a<b)throw new Error("Parameter value is too small");if(a>c)throw new Error("Parameter value is too big");return a}