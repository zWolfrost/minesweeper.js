export default class a{constructor(a,b,c=Math.floor(a*b/5),i=Math.random){if(a=Math.floor(+a),b=Math.floor(+b),c=Math.floor(+c),a<1||b<1||c<1)throw new Error("Invalid minefield dimensions");if(c>a*b)throw new Error("Mines number is greater than the total cells number");let e=a*b;Object.assign(this,{rows:a,cols:b,cells:e,mines:c});for(let f=0;f<e;f++)this[f]={mines:0,isMine:f<c,isOpen:!1,isFlagged:!1};for(let d=e-1;d>0;d--){let h=Math.floor(i()*(d+1));[this[d],this[h]]=[this[h],this[d]]}for(let g=0;g<e;g++)this[g].isMine&&this.getNearbyCells(g).forEach(a=>this[a].mines++);return this}simplify(){let c=[];for(let a=0;a<this.rows;a++){let d=[];for(let b=0;b<this.cols;b++){let e=this[a*this.cols+b];d.push(e.isMine?-1:e.mines)}c.push(d)}return c}openCell(a,e=this.isNew()){if((a=Math.floor(+a))<0||a>=this.cells)throw new Error("Invalid cell index");let f=[],g=a=>{this[a].isOpen=!0,f.push(a)},c=a=>{0==this[a].mines&&this.getEmptyZone(a).forEach(a=>g(a))};if(!1==this[a].isOpen){if(g(a),this[a].isMine){if(e){this[a].isMine=!1;for(let b=0;b<this.cells;b++)if(!1==this[b].isMine&&b!=a){this[b].isMine=!0;break}this.resetMines(),c(a)}}else c(a)}else if(0!=this[a].mines){let d=this.getNearbyCells(a);d.filter(a=>this[a].isFlagged).length==this[a].mines&&d.forEach(a=>{!1==this[a].isFlagged&& !1==this[a].isOpen&&(g(a),!1==this[a].isMine&&c(a))})}return f}isSolvableFrom(u,V=!0){if((u=Math.floor(+u))<0||u>=this.cells)throw new Error("Invalid cell index");let M=(a,b)=>JSON.stringify(a).includes(JSON.stringify(b)),N=this.openCell(u);if(1==N.length)return this[N[0]].isOpen,!1;let b=!0;for(;b;){let a=[];b=!1;let d=[];for(let l=0;l<this.cells;l++)if(!1==this[l].isOpen&& !1==this[l].isFlagged){let D=this.getNearbyCells(l);for(let v=0;v<D.length;v++)!0==this[D[v]].isOpen&&d.push(D[v])}for(let c of d=[...new Set(d)])if(0==this[c].mines){let E=this.getEmptyZone(c);for(let w=0;w<E.length;w++)!1==this[E[w]].isOpen&&(this[E[w]].isOpen=!0,b=!0)}else{let x=this.getNearbyCells(c),O=0,y=0,m=[];for(let n=0;n<x.length;n++)!1==this[x[n]].isOpen&&(O++,this[x[n]].isFlagged?y++:m.push(x[n]));if(m.length>0&&(this[c].mines==y&&(m.forEach(a=>this[a].isOpen=!0),b=!0),this[c].mines==O&&(m.forEach(a=>this[a].isFlagged=!0),b=!0),this[c].mines>y)){let P=[this[c].mines-y,...m.sort((a,b)=>a-b)];!1==M(a,P)&&a.push(P)}}if(!1==b){let F=!0;for(;F;)for(let Q of(F=!1,d)){let z=this.getNearbyCells(Q),R=[],S=0;for(let o=0;o<z.length;o++)this[z[o]].isFlagged?S++:!1==this[z[o]].isOpen&&R.push(z[o]);for(let A=0;A<a.length;A++){let G=this[Q].mines-a[A][0]-S;if(a[A].slice(1).every(a=>R.includes(a))&&G>0){let H=R.filter(b=>!1==a[A].includes(b,1)).sort((a,b)=>a-b);H.length>0&& !1==M(a,[G,...H])&&(a.push([G,...H]),F=!0)}}}}if(!1==b)for(let I of d){let e=this.getNearbyCells(I);for(let f=0;f<a.length;f++)if(e.some(b=>a[f].includes(b,1))){let W=a[f].slice(1).filter(a=>!1==e.includes(a)).length,J=0,p=[];for(let g=0;g<e.length;g++)this[e[g]].isFlagged?J++:!1==this[e[g]].isOpen&& !1==a[f].includes(e[g],1)&&p.push(e[g]);p.length>0&&(this[I].mines==J+a[f][0]+p.length&&(p.forEach(a=>this[a].isFlagged=!0),b=!0),this[I].mines==J+a[f][0]-W&& !1==b&&p.forEach(a=>{!1==this[a].isFlagged&&(this[a].isOpen=!0,b=!0)}))}}if(!1==b)for(let K of d){let h=this.getNearbyCells(K),X=h.filter(a=>!1==this[a].isOpen&& !1==this[a].isFlagged),q=[0],T=0;for(let i=0;i<a.length;i++)a[i].slice(1).every(a=>X.includes(a))&& !1==a[i].slice(1).some(a=>q.includes(a,1))&&(T++,q[0]+=a[i][0],q.push(...a[i].slice(1)));if(T>1){let L=0,r=[];for(let j=0;j<h.length;j++)this[h[j]].isFlagged?L++:!1==this[h[j]].isOpen&& !1==q.includes(h[j],1)&&r.push(h[j]);r.length>0&&(this[K].mines==L+q[0]+r.length?(r.forEach(a=>this[a].isFlagged=!0),b=!0):this[K].mines==L+q[0]&&r.forEach(a=>{!1==this[a].isFlagged&&(this[a].isOpen=!0,b=!0)}))}}if(!1==b){if(this.usedFlags==this.mines)for(let s=0;s<this.cells;s++)!1==this[s].isOpen&& !1==this[s].isFlagged&&(this[s].isOpen=!0);else{a.sort((a,b)=>a.length-b.length);let B=[0];for(let t=0;t<a.length;t++)!1==a[t].slice(1).some(a=>JSON.stringify(B.slice(1)).includes(a))&&(B[0]+=a[t][0],B.push(...a[t].slice(1)));if(B[0]==this.mines-this.usedFlags)for(let k=0;k<this.cells;k++)!1==this[k].isOpen&& !1==this[k].isFlagged&& !1==B.includes(k,1)&&(this[k].isOpen=!0,b=!0)}}}let U=!1;if(this.isCleared()&&(U=!0),V)for(let C=0;C<this.cells;C++)this[C].isOpen=!1,this[C].isFlagged=!1;return U}getHint(V=!1,W=!0){let M=(a,b)=>JSON.stringify(a).includes(JSON.stringify(b)),b=[],c=[],a=[],l=[];for(let q=0;q<this.cells;q++)if(!1==this[q].isOpen&& !1==this[q].isFlagged){let D=this.getNearbyCells(q);for(let y=0;y<D.length;y++)!0==this[D[y]].isOpen&&l.push(D[y])}for(let d of l=[...new Set(l)])if(this[d].isOpen){if(0==this[d].mines){let N=this.getNearbyCells(d),O=N.filter(a=>!1==this[a].isOpen);O.length>0&&(b.push(["O",...N,d]),c.push(["O",...O]))}else{let m=this.getNearbyCells(d),P=0,z=0,r=[];for(let s=0;s<m.length;s++)!1==this[m[s]].isOpen&&(P++,this[m[s]].isFlagged?z++:r.push(m[s]));if(r.length>0&&(this[d].mines==z&&(b.push(["O",...m,d]),c.push(["O",...r])),this[d].mines==P&&(b.push(["F",...m,d]),c.push(["F",...r])),this[d].mines>z)){let Q=[this[d].mines-z,...r.sort((a,b)=>a-b)];!1==M(a,Q)&&a.push(Q)}}}let E=!0;for(;E;)for(let R of(E=!1,l)){let A=this.getNearbyCells(R),S=[],T=0;for(let t=0;t<A.length;t++)this[A[t]].isFlagged?T++:!1==this[A[t]].isOpen&&S.push(A[t]);for(let B=0;B<a.length;B++){let F=this[R].mines-a[B][0]-T;if(a[B].slice(1).every(a=>S.includes(a))&&F>0){let G=S.filter(b=>!1==a[B].includes(b,1)).sort((a,b)=>a-b);G.length>0&& !1==M(a,[F,...G])&&(a.push([F,...G]),E=!0)}}}for(let u of l){let e=this.getNearbyCells(u);for(let h=0;h<a.length;h++)if(e.some(b=>a[h].includes(b,1))){let X=a[h].slice(1).filter(a=>!1==e.includes(a)).length,H=0,i=[],I=[];for(let f=0;f<e.length;f++){let Y=this.getNearbyCells(e[f]);a[h].slice(1).every(a=>Y.includes(a))&&this[e[f]].isOpen&&I.push(...Y),this[e[f]].isFlagged?H++:!1==this[e[f]].isOpen&& !1==a[h].includes(e[f],1)&&i.push(e[f])}i.length>0&&(this[u].mines==H+a[h][0]+i.length?(b.push(["F",...new Set([...e,...I,u])]),c.push(["F",...i])):this[u].mines==H+a[h][0]-X&&(i=i.filter(a=>!1==this[a].isFlagged)).length>0&&(b.push(["O",...new Set([...e,...I,u])]),c.push(["O",...i])))}}for(let v of l){let g=this.getNearbyCells(v),Z=g.filter(a=>!1==this[a].isOpen&& !1==this[a].isFlagged),j=[0],U=0;for(let n=0;n<a.length;n++)a[n].slice(1).every(a=>Z.includes(a))&& !1==a[n].slice(1).some(a=>j.includes(a,1))&&(U++,j[0]+=a[n][0],j.push(...a[n].slice(1)));if(U>1){let J=0,k=[];for(let o=0;o<g.length;o++)this[g[o]].isFlagged?J++:!1==this[g[o]].isOpen&& !1==j.includes(g[o],1)&&k.push(g[o]);k.length>0&&(this[v].mines==J+j[0]+k.length?(b.push(["F",...new Set([...g,...j.slice(1),v])]),c.push(["F",...k])):this[v].mines==J+j[0]&&(k=k.filter(a=>!1==this[a].isFlagged)).length>0&&(b.push(["O",...new Set([...g,...j.slice(1),v])]),c.push(["O",...k])))}}if(this.usedFlags==this.mines){let K=[];for(let w=0;w<this.cells;w++)!1==this[w].isOpen&& !1==this[w].isFlagged&&K.push(w);b.push(["O",...K]),c.push(["O",...K])}else{a.sort((a,b)=>a.length-b.length);let C=[0];for(let x=0;x<a.length;x++)!1==a[x].slice(1).some(a=>JSON.stringify(C.slice(1)).includes(a))&&(C[0]+=a[x][0],C.push(...a[x].slice(1)));if(C[0]==this.mines-this.usedFlags){let L=[];for(let p=0;p<this.cells;p++)!1==this[p].isOpen&& !1==this[p].isFlagged&& !1==C.includes(p,1)&&L.push(p);b.push(["O",...L]),c.push(["O",...L])}}return W&&(b=b[0],c=c[0]),V?c:b}resetMines(){for(let b=0;b<this.cells;b++)this[b].mines=0;for(let a=0;a<this.cells;a++)this[a].isMine&&this.getNearbyCells(a).forEach(a=>this[a].mines++)}getCellArray(){return Object.values(this).slice(0,this.cells)}getNearbyCells(a,d=!1){if((a=Math.floor(+a))<0||a>=this.cells)throw new Error("Invalid cell index");let b=[a-this.cols-1,a-this.cols,a-this.cols+1,a-1,a+1,a+this.cols-1,a+this.cols,a+this.cols+1],c=[];return d&&c.push(a),b[1]>=0&&c.push(b[1]),b[6]<this.cells&&c.push(b[6]),0!=this.getCellCol(a)&&(c.push(b[3]),b[0]>=0&&c.push(b[0]),b[5]<this.cells&&c.push(b[5])),0!=this.getCellCol(a+1)&&(c.push(b[4]),b[2]>=0&&c.push(b[2]),b[7]<this.cells&&c.push(b[7])),c}getEmptyZone(d,g=!1){if((d=Math.floor(+d))<0||d>=this.cells)throw new Error("Invalid cell index");let a=[d];for(let e=0;e<a.length;e++)if(0==this[a[e]].mines){let b=this.getNearbyCells(a[e]);if(g)for(let f=0;f<b.length;f++)!1==a.includes(b[f])&&a.push(b[f]);else for(let c=0;c<b.length;c++)!1==a.includes(b[c])&& !1==this[b[c]].isFlagged&&a.push(b[c])}return a}getCellRow(a){return(a=Math.abs(Math.floor(+a)))/this.cols|0}getCellCol(a){return(a=Math.abs(Math.floor(+a)))%this.cols}getCellIndex(a,b){return a=Math.abs(Math.floor(+a)),b=Math.abs(Math.floor(+b)),a*this.cols+b}isNew(){return!1==this.getCellArray().some(a=>a.isOpen)}isGoingOn(){let b=!1,c=!1;for(let a=0;a<this.cells;a++){if(this[a].isOpen&&this[a].isMine)return!1;this[a].isOpen&&(c=!0),!1==this[a].isOpen&& !1==this[a].isMine&&(b=!0)}return c&&b}isOver(){let b=!1;for(let a=0;a<this.cells;a++)if(!1==this[a].isOpen&& !1==this[a].isMine&&(b=!0),this[a].isOpen&&this[a].isMine)return!0;return!1==b}isCleared(){for(let a=0;a<this.cells;a++)if(!1==this[a].isOpen&& !1==this[a].isMine||this[a].isOpen&&this[a].isMine)return!1;return!0}isLost(){return this.getCellArray().some(a=>a.isOpen&&a.isMine)}visualDebug(d=!1){let c="";for(let a=0;a<this.cells;a++){let b="";!1==this[a].isOpen&& !1==d?this[a].isFlagged?b+="F":b+="?":!0==this[a].isMine?b+="X":b+=this[a].mines,0==this.getCellCol(a+1)?c+=b+"\n":c+=b+" "}console.log(c)}get usedFlags(){return this.getCellArray().filter(a=>a.isFlagged).length}}